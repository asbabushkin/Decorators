"""
Medium
    1. Написать функцию, которая на вход будет принимать произвольное количество аргументов и возвращать их сумму.
    2. В сигнатуре функции объявить 4 обязательных аргумента, но оставить возможность передавать в неё
        сколько угодно дополнительных аргументов. Попробуйте вызвать функцию в следующих ситуациях и
        объясните результат:
            2.1 прокинуть в функцию только 1 аргумент
            2.2 прокинуть аргументы таким образом, чтобы обязательный аргумент был передан одновременно
                позиционно и по ключу
            2.3 создать кортеж со значениями и распаковать его при вызове функции с помощью *
            2.4 создать словарь со значениями и распаковать его при вызове функции с помощью * и **: что
                наблюдаете? Почему?

"""


# Шаг 1.
def summarize(*args):
    return sum(args)


print(f'Результат шага 1.1: {summarize(1, 2, 3, 4, 5)}')


# Шаг 2.
def summarize_upd(num_1, num_2, num_3, num_4, *args, **kwargs):
    return num_1 + num_2 + num_3 + num_4 + sum(args) + sum(kwargs.values())


try:
    print(f'Шаг 2.1: {summarize_upd(1)}')
except:
    print(
        'Шаг 2.1 при передаче одного аргумента функция summarize_upd() падает с ошибкой\n '
        'TypeError: summarize_upd() missing 3 required positional arguments \n '
        'т.к. не хватает обязательных аргументов')

try:
    print(f'Шаг 2.2: {summarize_upd(1, 2, 3, 4, num_2=5)}')
except:
    print('Шаг 2.2: при передаче обязательного аргумента одновременно позиционно и по ключу функция\nпадает с ошибкой: TypeError: summarize_upd() got multiple values for argument num_2\nт.к. происходит конфликт при попытке присвоения одному элементу нескольких значений')

tup = (1, 2, 3, 4, 5, 6)
#
try:
    print(f'Шаг 2.3: Результат передачи аргументов кортежем: {summarize_upd(*tup)}')
except:
    pass

dct = {'num_1': 1, 'num_2': 2, 'num_3': 3, 'num_4': 4}

try:
    print(f'dict: {summarize_upd(*dct)}')
except:
    print(f'Шаг 2.4: команда summarize_upd(*dct) выдает ошибку, т.к. для распаковки словарей используется оператор ** ')
try:
    print(f'Шаг 2.4: Результат передачи аргументов словарем: {summarize_upd(**dct)}')
except:
    pass